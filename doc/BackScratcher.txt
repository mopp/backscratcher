*BackScratcher.txt*     Vim version 7.3     Last change: 2013 Jan 4

Author:Mopp
License:Copyright (C) 2013 Mopp All Rights Reserved.
Version:0.1 for Vim 7.3


CONTENTS                                    *backscratcher-contents*
    Introduction                            |backscratcher-introduction|
        Features                            |backscratcher-features|
        Install                             |backscratcher-install|
    Usage                                   |backscratcher-usage|
    Options                                 |backscratcher-options|
    Key Mappings                            |backscratcher-key-mappings|
    Examples                                |backscratcher-examples|
    Changelog                               |backscratcher-changelog|


==============================================================================
INTRODUCTION                                *backscratcher-introduction*
    *BackScratcher* is Mopp's Vim Plugin as utilities. It packed some feature
    by some functions.
    This is developed in Github(https://github.com/mopp/backscratcher.git).

------------------------------------------------------------------------------
FEATURES                                    *backscratcher-features*
    * Delete Strings
        * It deletes until specified delimiter(; or : or etc).
    * Auto Control Parenthesis
        * It automatically moves cursol to in paren  when type closed paren.
        * It automatically types closed paren.

------------------------------------------------------------------------------
INSTALL                                     *backscratcher-install*
    Install the distributed files into your Vim script directory which is
    usually $HOME/.vim. you can use Neobundle below >
        NeoBundle 'git://github.com/mopp/backscratcher.git'
<

==============================================================================
USAGE                                       *backscratcher-usage*
    See |backscratcher-key-mappings| before use.
    I write examples below.
    Note:Cursol position is sandwiched between two *(asterisk)

* Delete Strings
    Example code. >
        int add(int m, int n){
            *r*eturn m + n;
        }
<
    In case of typing <Leader>da
>
        int add(int m, int n){
            * *;
        }
<
        In case of typing <Leader>da
>
        int add(int m, int n){
            * *
        }
<
    Those difference is that it includes delimiter or not.
    If you would like to insert after delete, you can use below. >
        <Leader>dci
        <Leader>dca
<

* Auto Control Parenthesis
    Note:We cannot enable both.

    You toggle Auto Back parenthesis >
        <Leader>ab
<
    Typing "" or () or  {} or etc.
    Then plugin automatically back cursol.
>
        ""* *, ()* *, {}* *,
                ↓
        "* *", (* *), {* *}, ...
<
    You toggle Auto Pair Parenthesis >
        <Leader>ap
<
    typing " or ( or  { or etc.
    Then plugin automatically complete parenthesis.
>
        "* * , (* * , {* * ,
                ↓
        ""* *, ()* *, {}* *, ...
<
==============================================================================
OPTIONS                                     *backscratcher-options*
    These oprions changes Plugin behavior.
    If you would like to change behavior, You add or change value in your
    vimrc.

g:BackScratcher_ParenList                   *g:BackScratcher_ParenList*
        The default controled parenthesis list in AutoParen Functions.

        Default Value is ['{}', '[]', '()', '""', '''''', '<>'].

g:BackScratcher_AutoParen_log_on            *g:BackScratcher_AutoParen_log_on*
        If this variable is 1, plugin shows log when you toggle AutoParen.

        Default Value is 1.

g:BackScratcher_AutoBackParen_State         *g:BackScratcher_AutoBackParen_State*
        If this variable is 1, plugin enable automatically back parenthesis.

        Default Value is 1.

g:BackScratcher_AutoPairParen_State         *g:BackScratcher_AutoPairParen_State*
        If this variable is 1, plugin enable automatically complete
        parenthesis.

        Default Value is 0.

g:BackScratcher_DelimiterList               *g:BackScratcher_DelimiterList*
       The default controled parenthesis list in delete str functions.

       Default Value is [';', ':', ')', '}', ']', '.', ',', '"', ''''].

==============================================================================
KEY MAPPINGS                                *backscratcher-key-mappings*
    These are default mappings.
    You can map below by yourself.

* Delete Strings >
    nmap <Leader>di <Plug>BackScratcher_Delete_Str_A
    nmap <Leader>da <Plug>BackScratcher_Delete_Str_B
    nmap <Leader>dci <Plug>BackScratcher_Delete_Str_C
    nmap <Leader>dca <Plug>BackScratcher_Delete_Str_D
<

* Auto Control Parenthesis >
    nmap <Leader>ab  <Plug>BackScratcher_Toggle_AutoBackParen
    nmap <Leader>ap  <Plug>BackScratcher_Toggle_AutoPairParen
<

==============================================================================
CHANGELOG                                   *backscratcher-changelog*
    2013-01-04
        - Fix some script.
        - Add documets.

    2013-01-03
        - Ver 0.1 Released.
        - Add Auto Control Paren.
        - Add Delete Strings.

==============================================================================

vim:ts=4:ft=help:norl:
